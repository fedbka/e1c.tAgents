
#Область ПрограммныйИнтерфейс

Функция ДанныеЗапросовТелеграмАгентов(КоличествоЗапросов = 0, УникальныйИдентификаторФормы = Неопределено) Экспорт
	
	ОбрабабатыватьЗапросыВКоличествеПоУмолчанию = 50;
	
	Попытка
		ОбрабабатыватьЗапросыВКоличестве = Цел(Число(КоличествоЗапросов));
	Исключение
		ОбрабабатыватьЗапросыВКоличестве = 0;
	КонецПопытки;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрШаблон(
		"ВЫБРАТЬ ПЕРВЫЕ %1 
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Период КАК Период,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Агент КАК Агент,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Идентификатор КАК Идентификатор,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ЕстьОшибка КАК ЕстьОшибка,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Обработан КАК Обработан,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Статус КАК Статус,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ОтветПолучен КАК ОтветПолучен,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ТелоЗапроса КАК ТелоЗапроса,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Команда КАК Команда,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ДатаОбработки КАК ДатаОбработки,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ОписаниеОшибки КАК ОписаниеОшибки,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ТелоОтвета КАК ТелоОтвета,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ДатаОтвета КАК ДатаОтвета
		|ИЗ
		|	РегистрСведений.ЗапросыИОтветыТелеграмАгентов.СрезПоследних(, НЕ Обработан) КАК ЗапросыИОтветыТелеграмАгентовСрезПоследних",?(ОбрабабатыватьЗапросыВКоличестве > 0, ОбрабабатыватьЗапросыВКоличестве, ОбрабабатыватьЗапросыВКоличествеПоУмолчанию));
	
	ДанныеЗапросовТелеграмАгентов = Запрос.Выполнить().Выгрузить();
	ДанныеЗапросовТелеграмАгентов.Колонки.Добавить("ТелоЗапросаСоответствие");
	
	Для Каждого ДанныеЗапросаТелеграмАгента Из ДанныеЗапросовТелеграмАгентов Цикл
		
		Попытка
			ТелоЗапросаСоответствие = ТелеграмАгентыКлиентСервер.ПреобразоватьВСоответствие(ДанныеЗапросаТелеграмАгента.ТелоЗапроса);
		Исключение
			ТелоЗапросаСоответствие = Неопределено;	
		КонецПопытки;
		
		ПредОбработкаОтправляемыхДанных(ТелоЗапросаСоответствие, УникальныйИдентификаторФормы);
		
		ДанныеЗапросаТелеграмАгента.ТелоЗапросаСоответствие = ТелоЗапросаСоответствие;
		
	КонецЦикла;
	
	
	ДанныеЗапросовТелеграмАгентов = ТаблицаЗначенийВМассив(ДанныеЗапросовТелеграмАгентов);	
	
	Возврат ДанныеЗапросовТелеграмАгентов;
	
КонецФункции

Процедура ПредОбработкаОтправляемыхДанных(ДанныеДляОтправки, УникальныйИдентификаторФормы = Неопределено) Экспорт
	
	Если ТипЗнч(ДанныеДляОтправки) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ДанныеДляОтправки.Получить("@type"); 
 
	Если Команда = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Команда = "sendMessage" Тогда
		ПредОбработкаОтправляемыхДанных_sendMessage(ДанныеДляОтправки, УникальныйИдентификаторФормы);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредОбработкаОтправляемыхДанных_sendMessage(ДанныеДляОтправки, УникальныйИдентификаторФормы)
	
	ТипОтправляемыхДанных = ДанныеДляОтправки.Получить("input_message_content").Получить("@type");
	
	Если ТипОтправляемыхДанных <> "inputMessageDocument" Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеФайлаBase64 = РаскодироватьСтроку(ДанныеДляОтправки.Получить("input_message_content").Получить("documentBase64"), СпособКодированияСтроки.КодировкаURL);
	ДанныеДляОтправки.Получить("input_message_content").Удалить("documentBase64");
	
	ДвоичныеДанныеФайла = Base64Значение(ДанныеФайлаBase64);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, УникальныйИдентификаторФормы);
		
	ДанныеДляОтправки.Получить("input_message_content").Вставить("documentTempStorage", АдресВоВременномХранилище);
	
КонецПроцедуры

Процедура ПостОбработкаОтправляемыхДанных(ДанныеДляОтправки, УникальныйИдентификаторФормы) Экспорт
	
	Если ТипЗнч(ДанныеДляОтправки) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ДанныеДляОтправки.Получить("@type"); 
 
	Если Команда = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Команда = "sendMessage" Тогда
		ПостОбработкаОтправляемыхДанных_sendMessage(ДанныеДляОтправки, УникальныйИдентификаторФормы);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПостОбработкаОтправляемыхДанных_sendMessage(ДанныеДляОтправки, УникальныйИдентификаторФормы)
	
	ТипОтправляемыхДанных = ДанныеДляОтправки.Получить("input_message_content").Получить("@type");
	
	Если ТипОтправляемыхДанных <> "inputMessageDocument" Тогда
		Возврат;
	КонецЕсли;
	
	ИмяВременногоФайла = ДанныеДляОтправки.Получить("input_message_content").Получить("document").Получить("path");
	
	//УдалитьФайлы(ИмяВременногоФайла);
	
КонецПроцедуры

#Область ОбработкаЗапросовКТелеграмАгентам

Функция СохранитьВнешнийЗапросАгенту(ЗНАЧ Агент = Неопределено, ТелоЗапроса, Команда, ЗНАЧ ДатаЗапроса = Неопределено) Экспорт

	Если Агент = Неопределено Тогда
		Агент = Справочники.ТелеграмАгенты.АгентПоУмолчанию;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаЗапроса) Тогда
		ДатаЗапроса = ТекущаяДата();
	КонецЕсли;
	
	Идентификатор = НовыйИдентификаторВнешнегоЗапроса();
	
	ДанныеЗаписи = Новый Структура;
	ДанныеЗаписи.Вставить("Период", ДатаЗапроса);
	ДанныеЗаписи.Вставить("Агент", Агент);
	ДанныеЗаписи.Вставить("Идентификатор", Идентификатор);
	ДанныеЗаписи.Вставить("Команда", Команда); 
	ДанныеЗаписи.Вставить("ТелоЗапроса", ТелоЗапроса);
	ДанныеЗаписи.Вставить("ЕстьОшибка", Ложь);
	ДанныеЗаписи.Вставить("Обработан", Ложь);
	ДанныеЗаписи.Вставить("Статус", ТелеграмАгентыКлиентСервер.СтатусНовыйЗапрос());
	
	
	Запись = РегистрыСведений.ЗапросыИОтветыТелеграмАгентов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, ДанныеЗаписи);
	
	Попытка
		Запись.Записать();
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Идентификатор;
	
КонецФункции

Функция НовыйИдентификаторВнешнегоЗапроса() Экспорт
	
	Возврат Строка(Новый УникальныйИдентификатор);
	
КонецФункции

Процедура УстановитьПризнакОшибкиВЗапросе(ДанныеЗапроса) Экспорт
	
	Запись = РегистрыСведений.ЗапросыИОтветыТелеграмАгентов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, ДанныеЗапроса);
	Запись.Активность = Истина;
	Запись.Обработан = Истина;
	Запись.ЕстьОшибка = Истина;
	Запись.Статус = "error";
	Запись.Записать(Истина);
	
КонецПроцедуры

Процедура УстановитьСтатусОтправленВнешнемуЗапросу(Идентификатор) Экспорт
	
	СтатусОтправлен = ТелеграмАгентыКлиентСервер.СтатусОтправлен();
	
	НаборЗаписей = РегистрыСведений.ЗапросыИОтветыТелеграмАгентов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Идентификатор.Установить(Идентификатор);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьИзменения = Ложь;
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Запись.Статус = СтатусОтправлен
			И Запись.Обработан Тогда
			Продолжить;
		КонецЕсли;
		
		ЕстьИзменения = Истина;
		Запись.Статус = СтатусОтправлен;	
		Запись.Обработан = Истина;	
		
	КонецЦикла;
	
	Если Не ЕстьИзменения Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

Процедура СохранитьЗапросTelegramNative(ЗНАЧ СодержаниеЗапроса, ЗНАЧ ИдентификаторЗапроса, ЗНАЧ ДатаОтправкиЗапроса, ЗНАЧ Агент = Неопределено) Экспорт
	
	Если Агент = Неопределено Тогда
		Агент = Справочники.ТелеграмАгенты.АгентПоУмолчанию;
	КонецЕсли;
	
	Запись = РегистрыСведений.ЗапросыTelegramNative.СоздатьМенеджерЗаписи();
	Запись.Период = ДатаОтправкиЗапроса;
	Запись.Активность = Истина;
	Запись.Агент = Агент;
	Запись.Идентификатор = ИдентификаторЗапроса;
	Запись.Содержание = СодержаниеЗапроса;
	
	Попытка
		Запись.Записать(Истина);
	Исключение
		ВызватьИсключение НСтр("ru = 'Не удалось сохранить содержание запроса Telegram Native.'");
	КонецПопытки;
	
КонецПроцедуры

Процедура СохранитьОтветTelegramNative(ЗНАЧ СодержаниеОтвета, ЗНАЧ ИдентификаторЗапроса, ЗНАЧ ДатаПолученияОтвета, ЗНАЧ Агент = Неопределено) Экспорт
	
	Если Агент = Неопределено Тогда
		Агент = Справочники.ТелеграмАгенты.АгентПоУмолчанию;
	КонецЕсли;
	
	Запись = РегистрыСведений.ОтветыTelegramNative.СоздатьМенеджерЗаписи();
	Запись.Период = ДатаПолученияОтвета;
	Запись.Активность = Истина;
	Запись.Агент = Агент;
	Запись.Идентификатор = ИдентификаторЗапроса;
	Запись.Содержание = СодержаниеОтвета;
	
	Попытка
		Запись.Записать(Истина);
	Исключение
		ВызватьИсключение НСтр("ru = 'Не удалось сохранить содержание ответа Telegram Native.'");
	КонецПопытки;
	
	УстановитьПризнакПолученияОтветаЗапросаTelegramNative(ИдентификаторЗапроса, СодержаниеОтвета, ДатаПолученияОтвета, Агент);
	
КонецПроцедуры

Процедура УстановитьПризнакПолученияОтветаЗапросаTelegramNative(ЗНАЧ ИдентификаторЗапроса, ЗНАЧ СодержаниеОтвета, ЗНАЧ ДатаПолученияОтвета = Неопределено, ЗНАЧ Агент = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Агент) Тогда
		Агент = Справочники.ТелеграмАгенты.АгентПоУмолчанию;	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаПолученияОтвета) Тогда
		ДатаПолученияОтвета = ТекущаяДата();
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЗапросыTelegramNative.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Агент.Установить(Агент);
	НаборЗаписей.Отбор.Идентификатор.Установить(ИдентификаторЗапроса);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьИзменения = Истина;
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Запись.ОтветПолучен Тогда
			Продолжить;
		КонецЕсли;
		
		ЕстьИзменения = Истина;
		Запись.ОтветПолучен = Истина;
		Запись.ДатаПолученияОтвета = ДатаПолученияОтвета;
		
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		НаборЗаписей.Записать(Истина);
		УстановитьПризнакОтветПолученВнешнегоЗапроса(Агент, ИдентификаторЗапроса, СодержаниеОтвета, ДатаПолученияОтвета);	
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПризнакОтветПолученВнешнегоЗапроса(ЗНАЧ Агент = Неопределено, ИдентификаторЗапроса, СодержаниеОтвета, ДатаПолученияОтвета) Экспорт
	
	Если Не ЗначениеЗаполнено(Агент) Тогда
		Агент = Справочники.ТелеграмАгенты.АгентПоУмолчанию;
	КонецЕсли;
	
	
	НаборЗаписей = РегистрыСведений.ЗапросыИОтветыТелеграмАгентов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Агент.Установить(Агент);
	НаборЗаписей.Отбор.Идентификатор.Установить(ИдентификаторЗапроса);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьИзменения = Ложь;
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Запись.ОтветПолучен Тогда
			Продолжить;
		КонецЕсли;
		
		ЕстьИзменения = Истина;
		Запись.ДатаОтвета = ДатаПолученияОтвета;
		Запись.ОтветПолучен = Истина;
		Запись.ТелоОтвета = СодержаниеОтвета;
		Запись.Статус = ТелеграмАгентыКлиентСервер.СтатусПолученОтвет();
		
	КонецЦикла;
	
	Если Не ЕстьИзменения Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Функция СтатусВнешнегоЗапроса(ЗНАЧ ИдентификаторЗапроса, ЗНАЧ Агент = Неопределено) Экспорт
	
	Если ИдентификаторЗапроса = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Агент) Тогда
		Агент = Справочники.ТелеграмАгенты.АгентПоУмолчанию;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Агент", Агент);
	Запрос.УстановитьПараметр("ИдентификаторЗапроса", ИдентификаторЗапроса); 
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Идентификатор КАК Идентификатор,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Статус КАК Статус,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.Обработан КАК Обработан,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ОтветПолучен КАК ОтветПолучен,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ТелоОтвета КАК ТелоОтвета,
		|	ЗапросыИОтветыТелеграмАгентовСрезПоследних.ДатаОтвета КАК ДатаОтвета
		|ИЗ
		|	РегистрСведений.ЗапросыИОтветыТелеграмАгентов.СрезПоследних(
		|			,
		|			Агент = &Агент
		|				И Идентификатор = &ИдентификаторЗапроса) КАК ЗапросыИОтветыТелеграмАгентовСрезПоследних";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ИнформацияОСтатусе = Новый Соответствие;
	ИнформацияОСтатусе.Вставить("id", ИдентификаторЗапроса);
	ИнформацияОСтатусе.Вставить("status", Выборка.Статус);
	
	Если Выборка.ОтветПолучен Тогда
		ИнформацияОСтатусе.Вставить("answer", Выборка.ТелоОтвета);
		ИнформацияОСтатусе.Вставить("answer_date", Выборка.ДатаОтвета);
	КонецЕсли;
	
	СтатусВнешнегоЗапроса = ТелеграмАгентыКлиентСервер.ПреобразоватьВJSON(ИнформацияОСтатусе);
	
	Возврат СтатусВнешнегоЗапроса;
	
КонецФункции

// Преобразует таблицу значений в массив структур.
// Может использоваться для передачи на клиент данных в том случае, если таблица
// значений содержит только такие значения, которые могут
// быть переданы с сервера на клиент.
//
// Полученный массив содержит структуры, каждая из которых повторяет
// структуру колонок таблицы значений.
//
// Не рекомендуется использовать для преобразования таблиц значений
// с большим количеством строк.
//
// Параметры:
//  ТаблицаЗначений - ТаблицаЗначений - исходная таблица значений.
//
// Возвращаемое значение:
//  Массив - коллекция строк таблицы в виде структур.
//
Функция ТаблицаЗначенийВМассив(ТаблицаЗначений) Экспорт
	
	Массив = Новый Массив();
	СтруктураСтрокой = "";
	НужнаЗапятая = Ложь;
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		Если НужнаЗапятая Тогда
			СтруктураСтрокой = СтруктураСтрокой + ",";
		КонецЕсли;
		СтруктураСтрокой = СтруктураСтрокой + Колонка.Имя;
		НужнаЗапятая = Истина;
	КонецЦикла;
	Для Каждого Строка Из ТаблицаЗначений Цикл
		НоваяСтрока = Новый Структура(СтруктураСтрокой);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		Массив.Добавить(НоваяСтрока);
	КонецЦикла;
	Возврат Массив;

КонецФункции

#КонецОбласти