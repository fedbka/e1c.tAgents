
#Область СлужебныйПрограммныйИнтерфейс

#Область ОбщегоНазначения

Функция ИмяПараметраКомпоненты() Экспорт
	
	Возврат "ТелеграмАгенты.TelegramNative";
	
КонецФункции

Функция ПараметрыКомпоненты(РасположениеTDDB = Неопределено, ИдентификаторПриложения, ХэшПриложения) Экспорт
	
	ПараметрыКомпоненты = Новый Соответствие;
	ПараметрыКомпоненты.Вставить("@type", "tdlibParameters");				
	ПараметрыКомпоненты.Вставить("database_directory", ?( НЕ ЗначениеЗаполнено(РасположениеTDDB), КаталогВременныхФайлов() + "TDDB", РасположениеTDDB) );
	ПараметрыКомпоненты.Вставить("api_id", ИдентификаторПриложения);
	ПараметрыКомпоненты.Вставить("api_hash", ХэшПриложения);
	ПараметрыКомпоненты.Вставить("system_language_code", "en");
	ПараметрыКомпоненты.Вставить("device_model", "Desktop");
	ПараметрыКомпоненты.Вставить("system_version", "Unknown");
	ПараметрыКомпоненты.Вставить("application_version", "1.0");
	
	Возврат ПараметрыКомпоненты;
	
КонецФункции

Функция ПреобразоватьВJSON(Значение) Экспорт

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();			
	ЗаписатьJSON(ЗаписьJSON, Значение);	
	
	Попытка
		ПредставлениеJSON = ЗаписьJSON.Закрыть();
	Исключение
		ПредставлениеJSON = Неопределено;
	КонецПопытки;
	
	Возврат ПредставлениеJSON;
	
КонецФункции

Функция ПреобразоватьВСоответствие(ЗначениеJSON) Экспорт

	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ЗначениеJSON);
	
	Попытка
		ЗначениеСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
	Исключение
		ЗначениеСоответствие = Неопределено;
	КонецПопытки;
	
	Возврат ЗначениеСоответствие;
	
КонецФункции

#КонецОбласти

#Область ЗапросыАвторизации

Функция ЗапросСостоянияАвторизации() Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "getAuthorizationState");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросУстановкаПараметровTDLib(РасположениеTDDB = Неопределено) Экспорт
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "setTdlibParameters");				
	Запрос.Вставить("parameters", ТелеграмАгентыКлиентСервер.ПараметрыКомпоненты(РасположениеTDDB));
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросПроверкаКлючаШифрования() Экспорт
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "checkDatabaseEncryptionKey");
	Запрос.Вставить("encryption_key", "");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросУстановитьНомерТелефона(НомерТелефона) Экспорт 
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "setAuthenticationPhoneNumber");
	Запрос.Вставить("phone_number", НомерТелефона);
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросУстановитьКодАвторизации(КодПодтверждения) Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "checkAuthenticationCode");
	Запрос.Вставить("code", КодПодтверждения);
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область ПрочиеЗапросы
 
Функция ЗапросСписокЧатов() Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "getChats");
	Запрос.Вставить("chat_list", "null");
	Запрос.Вставить("limit", 100);
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область СтруктурыДанных

// formattedText
Функция ФорматированныйТекст(ФорматируемыйТекст) Экспорт

	ФорматированныйТекст = Новый Соответствие;
	ФорматированныйТекст.Вставить("@type", "formattedText");
	ФорматированныйТекст.Вставить("text", ФорматируемыйТекст);
	
	Возврат ФорматированныйТекст;
	
КонецФункции

// inputMessageText
Функция ТекстСообщения(Текст) Экспорт
	
	СодержимоеСообщения = Новый Соответствие;
	СодержимоеСообщения.Вставить("@type", "inputMessageText");
	СодержимоеСообщения.Вставить("text", ФорматированныйТекст(Текст));
	
	Возврат СодержимоеСообщения;
	
	
КонецФункции

#КонецОбласти

#Область СтатусыВнешнихЗапросов

Функция СтатусНовыйЗапрос() Экспорт
	
	Возврат "received";
	
КонецФункции

Функция СтатусОтправлен() Экспорт
	
	Возврат "sent";
	
КонецФункции

Функция СтатусПолученОтвет() Экспорт
	
	Возврат "processed";
	
КонецФункции

#КонецОбласти

#КонецОбласти