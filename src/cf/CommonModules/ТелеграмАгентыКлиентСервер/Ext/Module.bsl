///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО Профинтех
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Функция ИмяПараметраКомпоненты() Экспорт
	
	Возврат "ТелеграмАгенты.КомпонентаTelegram";
	
КонецФункции

Функция ОбработатьJSONОтвет(ОтветJSON) Экспорт

	Возврат ПреобразоватьВСоответствие(ОтветJSON);
	
КонецФункции

Функция ЗапросJSON(ЗапросСоответствие) Экспорт
	
	Возврат ПреобразоватьВJSON(ЗапросСоответствие);
	
КонецФункции

Функция ПараметрыКомпоненты(МестораспложениеTDDB = Неопределено) Экспорт
	
	ПараметрыКомпоненты = Новый Соответствие;
	ПараметрыКомпоненты.Вставить("@type", "tdlibParameters");				
	ПараметрыКомпоненты.Вставить("database_directory", ?( НЕ ЗначениеЗаполнено(МестораспложениеTDDB), КаталогВременныхФайлов(), МестораспложениеTDDB) + "TDDB");
	ПараметрыКомпоненты.Вставить("api_id", "94575");
	ПараметрыКомпоненты.Вставить("api_hash", "a3406de8d171bb422bb6ddf3bbd800e2");
	ПараметрыКомпоненты.Вставить("system_language_code", "en");
	ПараметрыКомпоненты.Вставить("device_model", "Desktop");
	ПараметрыКомпоненты.Вставить("system_version", "Unknown");
	ПараметрыКомпоненты.Вставить("application_version", "1.0");
	
	Возврат ПараметрыКомпоненты;
	
КонецФункции

Функция ПреобразоватьВJSON(Значение) Экспорт

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();			
	ЗаписатьJSON(ЗаписьJSON, Значение);	
	
	Попытка
		ПредставлениеJSON = ЗаписьJSON.Закрыть();
	Исключение
		ПредставлениеJSON = Неопределено;
	КонецПопытки;
	
	Возврат ПредставлениеJSON;
	
КонецФункции

Функция ПреобразоватьВСоответствие(ЗначениеJSON) Экспорт

	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ЗначениеJSON);
	
	Попытка
		ЗначениеСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
	Исключение
		ЗначениеСоответствие = Неопределено;
	КонецПопытки;
	
	Возврат ЗначениеСоответствие;
	
КонецФункции

#Область ЗапросыАвторизации

Функция ЗапросСостоянияАвторизации() Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "getAuthorizationState");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросУстановкаПараметровTDLib() Экспорт
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "setTdlibParameters");				
	Запрос.Вставить("parameters", ТелеграмАгентыКлиентСервер.ПараметрыКомпоненты());
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросПроверкаКлючаШифрования() Экспорт
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "checkDatabaseEncryptionKey");
	Запрос.Вставить("encryption_key", "");
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область ЗапросыСоответствующиеМетодамTDLib

// setAuthenticationPhoneNumber 
Функция ЗапросКодаПотверждения(ТелеграмАгентНомерТелефона) Экспорт 
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "setAuthenticationPhoneNumber");
	Запрос.Вставить("phone_number", ТелеграмАгентНомерТелефона);
	
	Возврат Запрос;
	
КонецФункции

// checkAuthenticationCode
Функция ЗапросУстановитьКодПодтверждения(КодПодтверждения) Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "checkAuthenticationCode");
	Запрос.Вставить("code", КодПодтверждения);
	
	Возврат Запрос;
	
КонецФункции

// importContacts
Функция ЗапросИмпортКонтактов(Контакты) Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "importContacts");
	Запрос.Вставить("contacts", Контакты);	
	
	Возврат Запрос;
	
КонецФункции

// sendBotStartMessage
Функция ЗапросПригласитьБотаВГрупповойЧат(ИдентификаторЧата, ИдентификаторБота) Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "sendBotStartMessage");
	Запрос.Вставить("bot_user_id", ИдентификаторБота);
	Запрос.Вставить("chat_id", ИдентификаторЧата);
	Запрос.Вставить("parametr", "PeaceForAll");
	
	Возврат Запрос;
	
КонецФункции

// getContacts
Функция ЗапросКонтакты() Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "getContacts");
	
	Возврат Запрос;
	
КонецФункции

// getContacts
Функция ЗапросЧаты() Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "getChats");
	Запрос.Вставить("chat_list", "null");
	Запрос.Вставить("limit", 100);
	
	Возврат Запрос;
	
КонецФункции

// createNewBasicGroupChat
Функция ЗапросСозданиеГрупповогоЧата(Идентификаторы, Заголовок) Экспорт
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "createNewBasicGroupChat");
	Запрос.Вставить("user_ids", Идентификаторы);
	Запрос.Вставить("title", Заголовок);
	
	Возврат Запрос;
	
КонецФункции

// createPrivateChat
Функция ЗапросСозданиеЧастногоЧата(ИдентификаторПользователя) Экспорт
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "createPrivateChat");
	Запрос.Вставить("user_id", ИдентификаторПользователя);
	
	Возврат Запрос;
	
КонецФункции

// addChatMember
Функция ЗапросДобавлениеПользователяВЧат(ИдентификаторЧата, ИдентификаторПользователя) Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "addChatMember");
	Запрос.Вставить("chat_id", ИдентификаторЧата); 
	Запрос.Вставить("user_id", ИдентификаторПользователя);
	
	Возврат Запрос;

КонецФункции

// sendMessage
Функция ЗапросОтправкаСообщения(Сообщение, ИдентификаторЧата) Экспорт
	
	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "sendMessage");
	Запрос.Вставить("chat_id", ИдентификаторЧата);
	Запрос.Вставить("input_message_content", Сообщение);
	
	Возврат Запрос;

КонецФункции

// getMe
Функция ЗапросИнформацииОбАгенте() Экспорт

	Запрос = Новый Соответствие;
	Запрос.Вставить("@type", "getMe");
	
	Возврат Запрос;

КонецФункции

// createNewSupergroupChat
Функция ЗапросСоздатьСуперГруппу(ТелоЗапроса) Экспорт
	
	Запрос = ПреобразоватьВСоответствие(ТелоЗапроса);
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область СтруктурыДанных

// contact
Функция КонтактПоНомеруТелефона(НомерТелефона) Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("@type", "contact");
	Результат.Вставить("phone_number", НомерТелефона);
	
	Возврат Результат;
	
КонецФункции

// contact
Функция КонтактПоИдентификатору(Идентификатор) Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("@type", "contact");
	Результат.Вставить("bot_user_id", Идентификатор);

	Возврат Результат;
	
КонецФункции

// formattedText
Функция ФорматированныйТекст(ФорматируемыйТекст) Экспорт

	ФорматированныйТекст = Новый Соответствие;
	ФорматированныйТекст.Вставить("@type", "formattedText");
	ФорматированныйТекст.Вставить("text", ФорматируемыйТекст);
	
	Возврат ФорматированныйТекст;
	
КонецФункции

// inputMessageText
Функция ТекстСообщения(Текст) Экспорт
	
	СодержимоеСообщения = Новый Соответствие;
	СодержимоеСообщения.Вставить("@type", "inputMessageText");
	СодержимоеСообщения.Вставить("text", ФорматированныйТекст(Текст));
	
	Возврат СодержимоеСообщения;
	
	
КонецФункции

#КонецОбласти

#Область ОбработкаДанныхВходящихЗапросов

Функция ДанныеВходящегоЗапросаКорректны(ДанныеЗапроса) Экспорт
	
	СтруктураДанных = СтруктураДанныхВходящегоЗапроса();
	
	ЗаполнитьЗначенияСвойств(СтруктураДанных, ДанныеЗапроса);
	
	ОбязательныеПоля = ОбязательныеПоляВходящегоЗапроса();
	
	Для Каждого Поле Из ОбязательныеПоля Цикл
		Если Не ЗначениеЗаполнено(СтруктураДанных[Поле]) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ КомандаПоддерживается(СтруктураДанных.Команда) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция КомандаПоддерживается(Команда) Экспорт
	
	Возврат Истина;
	
КонецФункции

Функция СтруктураДанныхВходящегоЗапроса() Экспорт
	
	СтруктураДанныхВходящегоЗапроса = Новый Структура;
	СтруктураДанныхВходящегоЗапроса.Вставить("Агент", ПредопределенноеЗначение("Справочник.ТелеграмАгенты.ПустаяСсылка"));
	СтруктураДанныхВходящегоЗапроса.Вставить("Идентификатор", "");
	СтруктураДанныхВходящегоЗапроса.Вставить("Команда", "");
	СтруктураДанныхВходящегоЗапроса.Вставить("ТелоЗапроса", "");
	СтруктураДанныхВходящегоЗапроса.Вставить("ЕстьОшибка", Ложь);
	СтруктураДанныхВходящегоЗапроса.Вставить("Обработан", Ложь);
	СтруктураДанныхВходящегоЗапроса.Вставить("Статус", "");
	
	Возврат СтруктураДанныхВходящегоЗапроса;
	
КонецФункции

Функция ОбязательныеПоляВходящегоЗапроса() Экспорт

	ОбязательныеПоляВходящегоЗапроса = Новый Массив;
	ОбязательныеПоляВходящегоЗапроса.Добавить("Агент");
	ОбязательныеПоляВходящегоЗапроса.Добавить("Идентификатор");
	ОбязательныеПоляВходящегоЗапроса.Добавить("Команда");
	ОбязательныеПоляВходящегоЗапроса.Добавить("ТелоЗапроса");
	
	Возврат ОбязательныеПоляВходящегоЗапроса;
	
КонецФункции

#КонецОбласти

#Область СтатусыВходящихЗапросов

Функция СтатусНовыйЗапрос() Экспорт
	
	Возврат "received";
	
КонецФункции

Функция СтатусОтправлен() Экспорт
	
	Возврат "sent";
	
КонецФункции

Функция СтатусПолученОтвет() Экспорт
	
	Возврат "processed";
	
КонецФункции

#КонецОбласти

#КонецОбласти